@inherits LayoutComponentBase

@using ToDo.Models

@inject Blazored.LocalStorage.ILocalStorageService localStorage

<MudThemeProvider @bind-IsDarkMode=@_systemData.DarkMode
                  Theme="@CustomTheme" />
<MudPopoverProvider />

<MudLayout>
    <MudAppBar Dense=true Color="Color.Inherit">
        <MudSpacer/>
        <MudToggleIconButton Toggled=@_systemData.DarkMode
                             Icon="@Icons.Material.Outlined.DarkMode"
                             Title="Switch to Dark Theme"
                             ToggledIcon="@Icons.Material.Outlined.LightMode"
                             ToggledTitle="Switch to Light Theme"
                             ToggledColor="Color.Inherit"
                             ToggledChanged="OnThemeChange"/>
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub"
                       Color="Color.Secondary"
                       arial-label="github"/>

    </MudAppBar>

    <MudMainContent Class="mt-4">
        <MudContainer MaxWidth="MaxWidth.ExtraLarge">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    // 系統資料
    private SystemData _systemData = SystemData.Instance;

    // 元件初始化
    protected override async Task OnInitializedAsync()
    {
        try
        {
            // 從local storage讀取主題設定
            _systemData.DarkMode =
                await localStorage.GetItemAsync<bool>("darkMode");
        }
        catch
        {
            // 預設為深色主題
            _systemData.DarkMode = true;
        }
    }

    // 自訂主題顏色
    private readonly MudTheme CustomTheme = new()
    {
        // 深色主題
        PaletteDark = new PaletteDark()
        {
            // 主色
            Primary = Colors.Orange.Lighten2,
            // 副色
            Secondary = Colors.Pink.Lighten2
        },
        // 淺色主題
        PaletteLight = new PaletteLight()
        {
            // 主色
            Primary = Colors.Orange.Lighten2,
            // 副色
            Secondary = Colors.Pink.Lighten2,
            // 背景顏色
            AppbarBackground = Colors.Orange.Lighten5
        },
        // 字體
        Typography = new Typography()
        {
            Default = new Default()
            {
                FontFamily = new[] {
                    "iansui", "Roboto", "Helvetica", "Arial", "sans-serif"
                }
            }
        }
    };

    // 切換主題
    private async Task OnThemeChange(bool toggled)
    {
        // 取得主題狀態
        _systemData.DarkMode = toggled;
        // 儲存主題至local storage
        await localStorage.SetItemAsync("darkMode", _systemData.DarkMode);
    }
}